name: 投稿受信

on:
  workflow_dispatch:
    inputs:
      username:
        description: 'ユーザー名'
        required: true
      message:
        description: 'メッセージ'
        required: true

jobs:
  post:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # コードの書き込み権限のみ付与
      issues: none      # Issuesへのアクセス権限なし
      pull-requests: none  # プルリクエストへのアクセス権限なし
      actions: none      # Actionsを利用したアクセスを許可しない
      workflows: none    # ワークフローの実行権限を許可しない
    steps:
      - uses: actions/checkout@v3

      - name: ユーザー名の一意性確認
        run: |
          if grep -q "${{ github.event.inputs.username }}" .usernames; then
            echo "ユーザー名は既に使用されています。"
            exit 1
          fi
          echo "${{ github.event.inputs.username }}" >> .usernames

      - name: メッセージのサニタイズ
        run: |
          sanitized_message=$(echo "${{ github.event.inputs.message }}" | sed 's/<[^>]*>//g')
          echo "サニタイズ後メッセージ: $sanitized_message"
          echo "$sanitized_message" > message.txt

      - name: レート制限確認
        run: |
          if [ -f ".ratelimit${{ github.event.inputs.username }}" ]; then
            last_time=$(cat .ratelimit${{ github.event.inputs.username }})
            now=$(date +%s)
            diff=$((now - last_time))
            if [ "$diff" -lt 60 ]; then
              echo "レート制限中です。1分以上経過してから再投稿してください。"
              exit 1
            fi
          fi
          mkdir -p .ratelimit
          date +%s > .ratelimit${{ github.event.inputs.username }}

      - name: 投稿保存
        run: |
          filename="posts/$(date +%s)_${{ github.event.inputs.username }}.md"
          sanitized_message=$(cat message.txt)
          echo "**${{ github.event.inputs.username }}**: $sanitized_message" > "$filename"
          echo "投稿が保存されました。"

      - name: 投稿リスト更新
        run: |
          echo "[{\"username\": \"${{ github.event.inputs.username }}\", \"message\": \"$sanitized_message\"}]" > posts/index.json

      - name: Commit & Push
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add posts .usernames .ratelimit
          git commit -m "新しい投稿: ${{ github.event.inputs.username }}"
          git push

  retry_on_failure:
    runs-on: ubuntu-latest
    needs: post
    if: failure()  # ジョブが失敗した場合にトリガーされる
    steps:
      - name: Actions完了後の再起動
        run: |
          echo "GitHub Actionsが失敗しました。再実行をトリガーします。"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -d '{"event_type": "retry"}' \
               https://api.github.com/repos/emon2358/bbs/dispatches
